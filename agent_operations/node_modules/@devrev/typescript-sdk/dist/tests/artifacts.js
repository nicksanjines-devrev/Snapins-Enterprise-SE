"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.artifactLocate = exports.artifactPrepare = void 0;
/* eslint-disable @typescript-eslint/comma-dangle */
const index_1 = require("../index");
const devrevSDK = index_1.client.setup({ endpoint: 'https://api.devrev.ai', token: process.env.DEVREV_TOKEN });
function artifactPrepare() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const artifactsPrepareResponse = yield devrevSDK.artifactsPrepare({
                file_name: 'PATH_TO_ARTIFACT',
            });
            expect(artifactsPrepareResponse.status).toBe(200);
            return artifactsPrepareResponse.data.id;
        }
        catch (error) {
            console.log(error);
        }
    });
}
exports.artifactPrepare = artifactPrepare;
function artifactLocate(id) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const artifactsLocateResponse = yield devrevSDK.artifactsLocate({
                id: id
            });
            expect(artifactsLocateResponse.status).toBe(200);
        }
        catch (error) {
            console.log(error);
        }
    });
}
exports.artifactLocate = artifactLocate;
