"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleApiError = void 0;
const axios_1 = require("axios");
const error_1 = require("./constants/error");
const getCallerName = (error) => {
    if (!error.stack) {
        return error_1.UNKNOWN_FUNCTION;
    }
    const stackLines = error.stack.split('\n');
    const callerLine = stackLines[stackLines.length - 2];
    const callerMatch = callerLine.match(/at async\s+(\S+)/);
    return callerMatch ? callerMatch[1] : error_1.UNKNOWN_FUNCTION;
};
const handleApiError = (error) => {
    const errorDetails = {
        api: error_1.UNKNOWN_URL,
        function_name: error_1.UNKNOWN_FUNCTION,
        message: error_1.UNKNOWN_MESSAGE,
        status: error_1.UNKNOWN_STATUS,
        type: error_1.UNKNOWN_TYPE,
    };
    if (error instanceof axios_1.AxiosError && error.response) {
        errorDetails.api = error.response.config.url || error_1.UNKNOWN_URL;
        errorDetails.function_name = getCallerName(error) || error_1.UNKNOWN_FUNCTION;
        errorDetails.message = error.response.data.message || error_1.UNKNOWN_MESSAGE;
        errorDetails.type = error.response.data.type || error_1.UNKNOWN_TYPE;
        errorDetails.status = error.response.status || error_1.UNKNOWN_STATUS;
    }
    const logMessage = [
        '\n=== Error Details ===',
        `Service: ${errorDetails.function_name}`,
        `API: ${errorDetails.api}`,
        `Error Type: ${errorDetails.type}`,
        `Status Code: ${errorDetails.status}`,
        `Message: ${errorDetails.message}`,
    ].filter(Boolean).join('\n');
    console.error(logMessage);
    return;
};
exports.handleApiError = handleApiError;
